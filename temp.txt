const eventsData = [
    {
        id: 1,
        sport: "football",
        league: "Liga Portugal",
        date: "2023-10-15",
        time: "20:15",
        team1: "SL Benfica",
        team2: "FC Porto",
        location: "Estádio da Luz",
        competition: "Liga Portugal"
    },
    {
        id: 2,
        sport: "basketball",
        league: "NBA",
        date: "2023-10-18",
        time: "03:30",
        team1: "LA Lakers",
        team2: "Golden State Warriors",
        location: "Crypto.com Arena",
        competition: "NBA"
    },
    {
        id: 3,
        sport: "volleyball",
        league: "Liga das Nações",
        date: "2023-10-21",
        time: "17:00",
        team1: "Portugal",
        team2: "Itália",
        location: "Pavilhão Multiusos",
        competition: "Liga das Nações"
    },
    {
        id: 4,
        sport: "football",
        league: "Premier League",
        date: "2023-10-22",
        time: "17:30",
        team1: "Manchester United",
        team2: "Manchester City",
        location: "Old Trafford",
        competition: "Premier League"
    },
    {
        id: 5,
        sport: "basketball",
        league: "Liga Portuguesa",
        date: "2023-10-25",
        time: "20:00",
        team1: "Benfica",
        team2: "FC Porto",
        location: "Pavilhão Fidelidade",
        competition: "Liga Portuguesa de Basquetebol"
    },
    {
        id: 6,
        sport: "volleyball",
        league: "Liga AVC",
        date: "2023-10-28",
        time: "19:30",
        team1: "Sporting CP",
        team2: "SC Espinho",
        location: "Pavilhão João Rocha",
        competition: "Liga AVC"
    },
    {
        id: 7,
        sport: "football",
        league: "La Liga",
        date: "2023-10-29",
        time: "21:00",
        team1: "Real Madrid",
        team2: "Barcelona",
        location: "Santiago Bernabéu",
        competition: "La Liga"
    },
    {
        id: 8,
        sport: "basketball",
        league: "EuroLeague",
        date: "2023-11-02",
        time: "20:45",
        team1: "CSKA Moscow",
        team2: "Fenerbahçe",
        location: "Megasport Arena",
        competition: "EuroLeague"
    }
];

const eventsContainer = document.getElementById('eventsContainer');
const sportFilter = document.getElementById('sport');
const leagueFilter = document.getElementById('league');
const dateFilter = document.getElementById('date');
const teamFilter = document.getElementById('team');
const applyFiltersBtn = document.getElementById('applyFilters');
const resetFiltersBtn = document.getElementById('resetFilters');
const viewButtons = document.querySelectorAll('.view-btn');
const prevPageBtn = document.getElementById('prevPage');
const nextPageBtn = document.getElementById('nextPage');
const currentPageSpan = document.getElementById('currentPage');
const totalPagesSpan = document.getElementById('totalPages');

let currentView = 'list';
let currentPage = 1;
const eventsPerPage = 4;
let filteredEvents = [...eventsData];

document.addEventListener('DOMContentLoaded', () => {
    renderEvents();
    setupEventListeners();
});

function setupEventListeners() {
    applyFiltersBtn.addEventListener('click', applyFilters);
    resetFiltersBtn.addEventListener('click', resetFilters);
    
    viewButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const view = btn.getAttribute('data-view');
            switchView(view);
        });
    });
    
    prevPageBtn.addEventListener('click', goToPrevPage);
    nextPageBtn.addEventListener('click', goToNextPage);
}

function applyFilters() {
    const sport = sportFilter.value;
    const league = leagueFilter.value;
    const date = dateFilter.value;
    const team = teamFilter.value.toLowerCase();
    
    filteredEvents = eventsData.filter(event => {
        if (sport !== 'all' && event.sport !== sport) return false;
        if (league !== 'all' && event.league !== league) return false;
        if (date && event.date !== date) return false;
        if (team && !event.team1.toLowerCase().includes(team) && !event.team2.toLowerCase().includes(team)) return false;
        
        return true;
    });
    
    currentPage = 1;
    renderEvents();
}

function resetFilters() {
    sportFilter.value = 'all';
    leagueFilter.value = 'all';
    dateFilter.value = '';
    teamFilter.value = '';
    
    filteredEvents = [...eventsData];
    currentPage = 1;
    renderEvents();
}

function switchView(view) {
    currentView = view;
    
    viewButtons.forEach(btn => {
        if (btn.getAttribute('data-view') === view) {
            btn.classList.add('active');
        } else {
            btn.classList.remove('active');
        }
    });
    
    renderEvents();
}

function goToPrevPage() {
    if (currentPage > 1) {
        currentPage--;
        renderEvents();
    }
}

function goToNextPage() {
    const totalPages = Math.ceil(filteredEvents.length / eventsPerPage);
    if (currentPage < totalPages) {
        currentPage++;
        renderEvents();
    }
}

function renderEvents() {
    const startIndex = (currentPage - 1) * eventsPerPage;
    const endIndex = startIndex + eventsPerPage;
    const eventsToShow = filteredEvents.slice(startIndex, endIndex);
    
    const totalPages = Math.ceil(filteredEvents.length / eventsPerPage);
    currentPageSpan.textContent = currentPage;
    totalPagesSpan.textContent = totalPages;
    
    prevPageBtn.disabled = currentPage === 1;
    nextPageBtn.disabled = currentPage === totalPages || totalPages === 0;
    
    eventsContainer.innerHTML = '';
    
    if (filteredEvents.length === 0) {
        eventsContainer.innerHTML = '<p class="no-events">Nenhum evento encontrado com os filtros aplicados.</p>';
        return;
    }
    
    if (currentView === 'list') {
        renderListView(eventsToShow);
    } else {
        renderGridView(eventsToShow);
    }
}

function renderListView(events) {
    eventsContainer.classList.remove('events-grid-view');
    eventsContainer.classList.add('events-list');
    
    events.forEach(event => {
        const eventDate = new Date(event.date);
        const monthNames = ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"];
        
        const eventElement = document.createElement('div');
        eventElement.className = 'event-item';
        eventElement.innerHTML = `
            <div class="event-date">
                <span class="day">${eventDate.getDate()}</span>
                <span class="month">${monthNames[eventDate.getMonth()]}</span>
            </div>
            <div class="event-details">
                <div class="event-teams">
                    <span class="team">${event.team1}</span>
                    <span class="vs">vs</span>
                    <span class="team">${event.team2}</span>
                </div>
                <div class="event-info">
                    <span class="event-sport">${getSportName(event.sport)}</span>
                    <span class="event-time"><i class="far fa-clock"></i> ${event.time} | ${event.location}</span>
                </div>
                <div class="event-actions">
                    <button class="action-btn" title="Adicionar ao calendário"><i class="far fa-calendar-plus"></i></button>
                    <button class="action-btn" title="Definir lembrete"><i class="far fa-bell"></i></button>
                    <button class="action-btn" title="Partilhar"><i class="fas fa-share-alt"></i></button>
                </div>
            </div>
        `;
        
        eventsContainer.appendChild(eventElement);
    });
}

function renderGridView(events) {
    eventsContainer.classList.remove('events-list');
    eventsContainer.classList.add('events-grid-view');
    
    events.forEach(event => {
        const eventDate = new Date(event.date);
        const monthNames = ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", 
                           "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"];
        
        const eventElement = document.createElement('div');
        eventElement.className = 'event-card-grid';
        eventElement.innerHTML = `
            <div class="event-card-header">
                <div class="event-card-date">
                    <i class="far fa-calendar"></i>
                    <span>${eventDate.getDate()} ${monthNames[eventDate.getMonth()]} ${eventDate.getFullYear()}</span>
                </div>
                <span class="event-sport">${getSportName(event.sport)}</span>
            </div>
            <div class="event-card-body">
                <div class="event-card-teams">
                    <h3>${event.team1} vs ${event.team2}</h3>
                    <p>${event.competition}</p>
                </div>
                <div class="event-card-info">
                    <p><i class="far fa-clock"></i> ${event.time}</p>
                    <p><i class="fas fa-map-marker-alt"></i> ${event.location}</p>
                </div>
                <div class="event-card-actions">
                    <button class="action-btn" title="Adicionar ao calendário"><i class="far fa-calendar-plus"></i> Calendário</button>
                    <button class="action-btn" title="Definir lembrete"><i class="far fa-bell"></i> Lembrete</button>
                </div>
            </div>
        `;
        
        eventsContainer.appendChild(eventElement);
    });
}

function getSportName(sportKey) {
    const sportNames = {
        'football': 'Futebol',
        'basketball': 'Basquetebol',
        'volleyball': 'Voleibol'
    };
    
    return sportNames[sportKey] || sportKey;
}